package org.cyber.utbot.api.utils.vulnerability

import org.utbot.engine.*
import org.utbot.engine.symbolic.SymbolicStateUpdate
import org.utbot.engine.symbolic.asHardConstraint


val stateUpdates: Map<Pair<String?, String>, (List<SymbolicValue>) -> SymbolicStateUpdate> = mapOf(
    "org.example.Vulnerability" to "vulnerability" to { symbolicValues ->
        SymbolicStateUpdate(
            hardConstraints = Le(
                symbolicValues[0] as PrimitiveValue,
                symbolicValues[1] as PrimitiveValue
            ).asHardConstraint()
        )
    },
    "org.example.Loop" to "fun2" to { symbolicValues ->
        SymbolicStateUpdate(hardConstraints = Ge(symbolicValues[0] as PrimitiveValue, 33).asHardConstraint())
    }
)
