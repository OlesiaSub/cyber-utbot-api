package org.testcases.structures.list;

// не работает так, как ожидалось, выводит только 1 тест

import java.util.Arrays;
import java.util.List;


public class Simple {
    public boolean fun(boolean x) {
        List<Boolean> bools = Arrays.asList(false, false, false, false, x);
        return bools.contains(true);
    }
}

path: r8 := @this: org.testcases.structures.list.Simple,
	z0 := @parameter0: boolean,
	$r0 = newarray (java.lang.Boolean)[5],
	$r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0),
	z0 := @parameter0: boolean,
	$r0 = new java.lang.Boolean,
	specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(z0),
	r0 := @this: java.lang.Boolean,
	z0 := @parameter0: boolean,
	specialinvoke r0.<java.lang.Object: void <init>()>(),
	r0 := @this: java.lang.Object,
	return,
	specialinvoke r0.<java.lang.Object: void <init>()>(),
	r0.<java.lang.Boolean: boolean value> = z0,
	return,
	specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(z0),
	return $r0,
	$r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0),
	$r0[0] = $r1,
	$r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0),
	z0 := @parameter0: boolean,
	$r0 = new java.lang.Boolean,
	specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(z0),
	r0 := @this: java.lang.Boolean,
	z0 := @parameter0: boolean,
	specialinvoke r0.<java.lang.Object: void <init>()>(),
	r0 := @this: java.lang.Object,
	return,
	specialinvoke r0.<java.lang.Object: void <init>()>(),
	r0.<java.lang.Boolean: boolean value> = z0,
	return,
	specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(z0),
	return $r0,
	$r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0),
	$r0[1] = $r2,
	$r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0),
	z0 := @parameter0: boolean,
	$r0 = new java.lang.Boolean,
	specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(z0),
	r0 := @this: java.lang.Boolean,
	z0 := @parameter0: boolean,
	specialinvoke r0.<java.lang.Object: void <init>()>(),
	r0 := @this: java.lang.Object,
	return,
	specialinvoke r0.<java.lang.Object: void <init>()>(),
	r0.<java.lang.Boolean: boolean value> = z0,
	return,
	specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(z0),
	return $r0,
	$r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0),
	$r0[2] = $r3,
	$r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0),
	z0 := @parameter0: boolean,
	$r0 = new java.lang.Boolean,
	specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(z0),
	r0 := @this: java.lang.Boolean,
	z0 := @parameter0: boolean,
	specialinvoke r0.<java.lang.Object: void <init>()>(),
	r0 := @this: java.lang.Object,
	return,
	specialinvoke r0.<java.lang.Object: void <init>()>(),
	r0.<java.lang.Boolean: boolean value> = z0,
	return,
	specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(z0),
	return $r0,
	$r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0),
	$r0[3] = $r4,
	$r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0),
	z0 := @parameter0: boolean,
	$r0 = new java.lang.Boolean,
	specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(z0),
	r0 := @this: java.lang.Boolean,
	z0 := @parameter0: boolean,
	specialinvoke r0.<java.lang.Object: void <init>()>(),
	r0 := @this: java.lang.Object,
	return,
	specialinvoke r0.<java.lang.Object: void <init>()>(),
	r0.<java.lang.Boolean: boolean value> = z0,
	return,
	specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(z0),
	return $r0,
	$r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0),
	$r0[4] = $r5,
	$r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0),
	r1 := @parameter0: java.lang.Object[],
	$r0 = new org.utbot.engine.overrides.collections.UtArrayList,
	specialinvoke $r0.<org.utbot.engine.overrides.collections.UtArrayList: void <init>(java.lang.Object[])>(r1),
	r0 := @this: org.utbot.engine.overrides.collections.UtArrayList,
	r1 := @parameter0: java.lang.Object[],
	specialinvoke r0.<java.util.AbstractList: void <init>()>(),
	r0 := @this: java.util.AbstractList,
	specialinvoke r0.<java.util.AbstractCollection: void <init>()>(),
	r0 := @this: java.util.AbstractCollection,
	specialinvoke r0.<java.lang.Object: void <init>()>(),
	r0 := @this: java.lang.Object,
	return,
	specialinvoke r0.<java.lang.Object: void <init>()>(),
	return,
	specialinvoke r0.<java.util.AbstractCollection: void <init>()>(),
	r0.<java.util.AbstractList: int modCount> = 0,
	return,
	specialinvoke r0.<java.util.AbstractList: void <init>()>(),
	staticinvoke <org.utbot.engine.overrides.UtOverrideMock: void visit(java.lang.Object)>(r0),
	i0 = lengthof r1,
	$r2 = new org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray,
	specialinvoke $r2.<org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray: void <init>()>(),
	r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData> = $r2,
	$r3 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>,
	virtualinvoke $r3.<org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray: void setRange(int,java.lang.Object[],int,int)>(0, r1, 0, i0),
	$r4 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>,
	$r4.<org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray: int end> = i0,
	return,
	specialinvoke $r0.<org.utbot.engine.overrides.collections.UtArrayList: void <init>(java.lang.Object[])>(r1),
	return $r0,
	$r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0),
	$r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1),
	z0 := @parameter0: boolean,
	$r0 = new java.lang.Boolean,
	specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(z0),
	r0 := @this: java.lang.Boolean,
	z0 := @parameter0: boolean,
	specialinvoke r0.<java.lang.Object: void <init>()>(),
	r0 := @this: java.lang.Object,
	return,
	specialinvoke r0.<java.lang.Object: void <init>()>(),
	r0.<java.lang.Boolean: boolean value> = z0,
	return,
	specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(z0),
	return $r0,
	$r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1),
	$z1 = interfaceinvoke $r6.<java.util.List: boolean contains(java.lang.Object)>($r7),
	r0 := @this: org.utbot.engine.overrides.collections.UtArrayList,
	r1 := @parameter0: java.lang.Object,
	virtualinvoke r0.<org.utbot.engine.overrides.collections.UtArrayList: void preconditionCheck()>(),
	r0 := @this: org.utbot.engine.overrides.collections.UtArrayList,
	$z0 = staticinvoke <org.utbot.engine.overrides.UtOverrideMock: boolean alreadyVisited(java.lang.Object)>(r0),
	if $z0 == 0 goto $r1 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>,
	return,
	virtualinvoke r0.<org.utbot.engine.overrides.collections.UtArrayList: void preconditionCheck()>(),
	if r1 != null goto i3 = 0,
	i3 = 0,
	$r2 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>,
	$i0 = $r2.<org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray: int end>,
	if i3 >= $i0 goto return 0,
	$r3 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>,
	$r4 = virtualinvoke $r3.<org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray: java.lang.Object get(int)>(i3),
	$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4),
	r1 := @this: java.lang.Boolean,
	r0 := @parameter0: java.lang.Object,
	$z0 = r0 instanceof java.lang.Boolean,
	if $z0 == 0 goto return 0,
	$z1 = r1.<java.lang.Boolean: boolean value>,
	$r2 = (java.lang.Boolean) r0,
	$z2 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>(),
	r0 := @this: java.lang.Boolean,
	$z0 = r0.<java.lang.Boolean: boolean value>,
	return $z0,
	$z2 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>(),
	if $z1 != $z2 goto $z3 = 0,
	$z3 = 0,
	return $z3,
	$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4),
	if $z0 == 0 goto i3 = i3 + 1,
	i3 = i3 + 1,
	goto [?= $r2 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>],
	$r2 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>,
	$i0 = $r2.<org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray: int end>,
	if i3 >= $i0 goto return 0,
	$r3 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>,
	$r4 = virtualinvoke $r3.<org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray: java.lang.Object get(int)>(i3),
	$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4),
	r1 := @this: java.lang.Boolean,
	r0 := @parameter0: java.lang.Object,
	$z0 = r0 instanceof java.lang.Boolean,
	if $z0 == 0 goto return 0,
	$z1 = r1.<java.lang.Boolean: boolean value>,
	$r2 = (java.lang.Boolean) r0,
	$z2 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>(),
	r0 := @this: java.lang.Boolean,
	$z0 = r0.<java.lang.Boolean: boolean value>,
	return $z0,
	$z2 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>(),
	if $z1 != $z2 goto $z3 = 0,
	$z3 = 0,
	return $z3,
	$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4),
	if $z0 == 0 goto i3 = i3 + 1,
	i3 = i3 + 1,
	goto [?= $r2 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>],
	$r2 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>,
	$i0 = $r2.<org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray: int end>,
	if i3 >= $i0 goto return 0,
	$r3 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>,
	$r4 = virtualinvoke $r3.<org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray: java.lang.Object get(int)>(i3),
	$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4),
	r1 := @this: java.lang.Boolean,
	r0 := @parameter0: java.lang.Object,
	$z0 = r0 instanceof java.lang.Boolean,
	if $z0 == 0 goto return 0,
	$z1 = r1.<java.lang.Boolean: boolean value>,
	$r2 = (java.lang.Boolean) r0,
	$z2 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>(),
	r0 := @this: java.lang.Boolean,
	$z0 = r0.<java.lang.Boolean: boolean value>,
	return $z0,
	$z2 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>(),
	if $z1 != $z2 goto $z3 = 0,
	$z3 = 0,
	return $z3,
	$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4),
	if $z0 == 0 goto i3 = i3 + 1,
	i3 = i3 + 1,
	goto [?= $r2 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>],
	$r2 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>,
	$i0 = $r2.<org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray: int end>,
	if i3 >= $i0 goto return 0,
	$r3 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>,
	$r4 = virtualinvoke $r3.<org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray: java.lang.Object get(int)>(i3),
	$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4),
	r1 := @this: java.lang.Boolean,
	r0 := @parameter0: java.lang.Object,
	$z0 = r0 instanceof java.lang.Boolean,
	if $z0 == 0 goto return 0,
	$z1 = r1.<java.lang.Boolean: boolean value>,
	$r2 = (java.lang.Boolean) r0,
	$z2 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>(),
	r0 := @this: java.lang.Boolean,
	$z0 = r0.<java.lang.Boolean: boolean value>,
	return $z0,
	$z2 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>(),
	if $z1 != $z2 goto $z3 = 0,
	$z3 = 0,
	return $z3,
	$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4),
	if $z0 == 0 goto i3 = i3 + 1,
	i3 = i3 + 1,
	goto [?= $r2 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>],
	$r2 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>,
	$i0 = $r2.<org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray: int end>,
	if i3 >= $i0 goto return 0,
	$r3 = r0.<org.utbot.engine.overrides.collections.UtArrayList: org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray elementData>,
	$r4 = virtualinvoke $r3.<org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray: java.lang.Object get(int)>(i3),
	$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4),
	r1 := @this: java.lang.Boolean,
	r0 := @parameter0: java.lang.Object,
	$z0 = r0 instanceof java.lang.Boolean,
	if $z0 == 0 goto return 0,
	$z1 = r1.<java.lang.Boolean: boolean value>,
	$r2 = (java.lang.Boolean) r0,
	$z2 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>(),
	r0 := @this: java.lang.Boolean,
	$z0 = r0.<java.lang.Boolean: boolean value>,
	return $z0,
	$z2 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>(),
	if $z1 != $z2 goto $z3 = 0,
	$z3 = 1,
	goto [?= return $z3],
	return $z3,
	$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4),
	if $z0 == 0 goto i3 = i3 + 1,
	return 1,
	$z1 = interfaceinvoke $r6.<java.util.List: boolean contains(java.lang.Object)>($r7)
assertions: (Le (int addr: (BVInt32 p_this)) (int addr: Int32 0)),
	(or (is addr: (BVInt32 p_this) org.testcases.structures.list.Simple), (eq addr: (BVInt32 p_this) addr: Int32 0)),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4464)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: (BVInt32 p_this)) false),
	(not (Eq (int addr: (BVInt32 p_this)) (int addr: Int32 0))),
	(Eq (int (select (array arraysLength : Int32 -> Int32) addr: Int32 2)) (int Int32 5)),
	(Ge (int (select (array arraysLength : Int32 -> Int32) addr: Int32 2)) (int Int32 0)),
	(Le (int (select (array arraysLength : Int32 -> Int32) addr: Int32 2)) (int Int32 40)),
	(is addr: Int32 2 java.lang.Boolean[]),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 2)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 2)) (int Int32 4464)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 2)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 2)) (int Int32 4)),
	(is addr: Int32 3 java.lang.Boolean),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 3)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 3)) (int Int32 4464)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 3)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 3)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 3) false),
	(is addr: Int32 4 java.lang.Boolean),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 4)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 4)) (int Int32 4464)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 4) false),
	(mkTermArray (array RefValues_Arrays : Int32 -> Int32 -> Int32)),
	(mkTermArray (array arraysLength : Int32 -> Int32)),
	(mkTermArray (array addrToNumDimensions : Int32 -> Int32)),
	(mkTermArray (array addrToTypeId : Int32 -> Int32)),
	(Eq (boolean (select (array java.lang.Boolean_value : Int32 -> Bool) addr: Int32 4)) (boolean false)),
	(mkTermArray (array java.lang.Boolean_value : Int32 -> Bool)),
	(is addr: Int32 2 java.lang.Object. Possible types number: 5),
	(is addr: Int32 9 java.lang.Boolean),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 9)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 9)) (int Int32 4464)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 9)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 9)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 9) false),
	(is addr: Int32 10 java.lang.Boolean),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 10)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 10)) (int Int32 4464)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 10) false),
	(Eq (boolean (select (array java.lang.Boolean_value : Int32 -> Bool) addr: Int32 10)) (boolean false)),
	(is addr: Int32 15 java.lang.Boolean),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 15)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 15)) (int Int32 4464)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 15)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 15)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 15) false),
	(is addr: Int32 16 java.lang.Boolean),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 16)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 16)) (int Int32 4464)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 16) false),
	(Eq (boolean (select (array java.lang.Boolean_value : Int32 -> Bool) addr: Int32 16)) (boolean false)),
	(is addr: Int32 21 java.lang.Boolean),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 21)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 21)) (int Int32 4464)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 21)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 21)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 21) false),
	(is addr: Int32 22 java.lang.Boolean),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 22)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 22)) (int Int32 4464)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 22) false),
	(Eq (boolean (select (array java.lang.Boolean_value : Int32 -> Bool) addr: Int32 22)) (boolean false)),
	(is addr: Int32 27 java.lang.Boolean),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 27)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 27)) (int Int32 4464)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 27)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 27)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 27) false),
	(is addr: Int32 28 java.lang.Boolean),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 28)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 28)) (int Int32 4464)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 28) false),
	(Eq (boolean (select (array java.lang.Boolean_value : Int32 -> Bool) addr: Int32 28)) (boolean true)),
	(is addr: Int32 33 java.util.Arrays),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 33)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 33)) (int Int32 4464)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 33)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 33)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 33) false),
	(is addr: Int32 34 org.utbot.engine.overrides.collections.UtArrayList. Possible types number: 4),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 34)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 34)) (int Int32 4464)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 34)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 34)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 34) false),
	(eq (select (array java.util.AbstractList_modCount : Int32 -> Int32) addr: Int32 34) Int32 0),
	(mkTermArray (array java.util.AbstractList_modCount : Int32 -> Int32)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 35) false),
	(is addr: Int32 36 org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 36)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 36)) (int Int32 4464)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 36)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 36)) (int Int32 4)),
	(eq (select (array org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray_begin : Int32 -> Int32) addr: Int32 36) Int32 0),
	(eq (select (array org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray_end : Int32 -> Int32) addr: Int32 36) Int32 0),
	(eq (select (array org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray_storage : Int32 -> Int32) addr: Int32 36) addr: Int32 0),
	(or (is addr: (select (array org.utbot.engine.overrides.collections.UtArrayList_elementData : Int32 -> Int32) addr: Int32 34) org.utbot.engine.overrides.collections.RangeModifiableUnlimitedArray), (eq addr: (select (array org.utbot.engine.overrides.collections.UtArrayList_elementData : Int32 -> Int32) addr: Int32 34) addr: Int32 0)),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: (select (array org.utbot.engine.overrides.collections.UtArrayList_elementData : Int32 -> Int32) addr: Int32 34))) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: (select (array org.utbot.engine.overrides.collections.UtArrayList_elementData : Int32 -> Int32) addr: Int32 34))) (int Int32 4464)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (select (array org.utbot.engine.overrides.collections.UtArrayList_elementData : Int32 -> Int32) addr: Int32 34))) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (select (array org.utbot.engine.overrides.collections.UtArrayList_elementData : Int32 -> Int32) addr: Int32 34))) (int Int32 4)),
	(Eq (int addr: (select (array org.utbot.engine.overrides.collections.UtArrayList_elementData : Int32 -> Int32) addr: Int32 34)) (int addr: Int32 36)),
	(Ge (int (select (array arraysLength : Int32 -> Int32) addr: Int32 37)) (int Int32 0)),
	(Le (int (select (array arraysLength : Int32 -> Int32) addr: Int32 37)) (int Int32 40)),
	(is addr: Int32 37 java.lang.Object[]. Possible types number: 4462),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 37)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 37)) (int Int32 4464)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 37)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 37)) (int Int32 4)),
	(mkTermArray (array org.utbot.engine.overrides.collections.UtArrayList_elementData : Int32 -> Int32)),
	(is addr: Int32 38 java.lang.Boolean),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 38)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 38)) (int Int32 4464)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 38)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 38)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 38) false),
	(is addr: Int32 39 java.lang.Boolean),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 39)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 39)) (int Int32 4464)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 39)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 39)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 39) false),
	(Eq (boolean (select (array java.lang.Boolean_value : Int32 -> Bool) addr: Int32 39)) (boolean true)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 41) false),
	(is addr: Int32 4 java.lang.Object. Possible types number: 3533),
	(generic-is addr: Int32 4 baseAddr<ParamTypeIndex>: addr: Int32 36<$0>),
	true,
	(eq (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 4) Int32 0),
	(eq (select (array _arraySetRange0 : Int32 -> Int32) Int32 0) addr: Int32 4),
	(is addr: Int32 10 java.lang.Object. Possible types number: 3533),
	(generic-is addr: Int32 10 baseAddr<ParamTypeIndex>: addr: Int32 36<$0>),
	true,
	(eq (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 10) Int32 0),
	(eq (select (array _arraySetRange0 : Int32 -> Int32) Int32 1) addr: Int32 10),
	(is addr: Int32 16 java.lang.Object. Possible types number: 3533),
	(generic-is addr: Int32 16 baseAddr<ParamTypeIndex>: addr: Int32 36<$0>),
	true,
	(eq (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 16) Int32 0),
	(eq (select (array _arraySetRange0 : Int32 -> Int32) Int32 2) addr: Int32 16),
	(is addr: Int32 22 java.lang.Object. Possible types number: 3533),
	(generic-is addr: Int32 22 baseAddr<ParamTypeIndex>: addr: Int32 36<$0>),
	true,
	(eq (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 22) Int32 0),
	(eq (select (array _arraySetRange0 : Int32 -> Int32) Int32 3) addr: Int32 22),
	(is addr: Int32 28 java.lang.Object. Possible types number: 3533),
	(generic-is addr: Int32 28 baseAddr<ParamTypeIndex>: addr: Int32 36<$0>),
	true,
	(eq (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 28) Int32 0),
	(bool p0),
	(eq (select (array _arraySetRange0 : Int32 -> Int32) Int32 4) addr: Int32 28)
assumption:
lastStatus: SAT
