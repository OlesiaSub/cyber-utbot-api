package org.testcases.ifs;

// не находит ответа (что нормально) и завершается

public class FermatsLastTheorem {
    public boolean fun(int x, int y, int z) {
        if (x > 0 && y > 0 && z > 0
            && x < 1291 && y < 1291 && z < 1291      // Math.pow(Integer.MAX_VALUE, 1.0/3)
            && x * x * x + y * y * y == z * z * z) {
            return true;
        }
        x++;
        return false;
    }
}

----------------------------------------------------------------------------------------------------
path: r0 := @this: org.testcases.ifs.FermatsLastTheorem,
	i9 := @parameter0: int,
	i0 := @parameter1: int,
	i1 := @parameter2: int,
	if i9 <= 0 goto return 0
assertions: (Le (int addr: (BVInt32 p_this)) (int addr: Int32 0)),
	(or (is addr: (BVInt32 p_this) org.testcases.ifs.FermatsLastTheorem), (eq addr: (BVInt32 p_this) addr: Int32 0)),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4461)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: (BVInt32 p_this)) false),
	(not (Eq (int addr: (BVInt32 p_this)) (int addr: Int32 0))),
	(Le (int (BVInt32 p0)) (int Int32 0)),
	(mkTermArray (array arraysLength : Int32 -> Int32)),
	(mkTermArray (array addrToNumDimensions : Int32 -> Int32)),
	(mkTermArray (array addrToTypeId : Int32 -> Int32))
assumption:
lastStatus: SAT

----------------------------------------------------------------------------------------------------
path: r0 := @this: org.testcases.ifs.FermatsLastTheorem,
	i9 := @parameter0: int,
	i0 := @parameter1: int,
	i1 := @parameter2: int,
	if i9 <= 0 goto return 0,
	if i0 <= 0 goto return 0
assertions: (Le (int addr: (BVInt32 p_this)) (int addr: Int32 0)),
	(or (is addr: (BVInt32 p_this) org.testcases.ifs.FermatsLastTheorem), (eq addr: (BVInt32 p_this) addr: Int32 0)),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4461)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: (BVInt32 p_this)) false),
	(not (Eq (int addr: (BVInt32 p_this)) (int addr: Int32 0))),
	(Gt (int (BVInt32 p0)) (int Int32 0)),
	(Le (int (BVInt32 p1)) (int Int32 0)),
	(mkTermArray (array arraysLength : Int32 -> Int32)),
	(mkTermArray (array addrToNumDimensions : Int32 -> Int32)),
	(mkTermArray (array addrToTypeId : Int32 -> Int32))
assumption:
lastStatus: SAT

----------------------------------------------------------------------------------------------------
path: r0 := @this: org.testcases.ifs.FermatsLastTheorem,
	i9 := @parameter0: int,
	i0 := @parameter1: int,
	i1 := @parameter2: int,
	if i9 <= 0 goto return 0,
	if i0 <= 0 goto return 0,
	if i1 <= 0 goto return 0,
	if i9 >= 1291 goto return 0,
	if i0 >= 1291 goto return 0
assertions: (Le (int addr: (BVInt32 p_this)) (int addr: Int32 0)),
	(or (is addr: (BVInt32 p_this) org.testcases.ifs.FermatsLastTheorem), (eq addr: (BVInt32 p_this) addr: Int32 0)),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4461)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: (BVInt32 p_this)) false),
	(not (Eq (int addr: (BVInt32 p_this)) (int addr: Int32 0))),
	(Gt (int (BVInt32 p0)) (int Int32 0)),
	(Gt (int (BVInt32 p2)) (int Int32 0)),
	(Lt (int (BVInt32 p0)) (int Int32 1291)),
	(Ge (int (BVInt32 p1)) (int Int32 1291)),
	(mkTermArray (array arraysLength : Int32 -> Int32)),
	(mkTermArray (array addrToNumDimensions : Int32 -> Int32)),
	(mkTermArray (array addrToTypeId : Int32 -> Int32))
assumption:
lastStatus: SAT

----------------------------------------------------------------------------------------------------
path: r0 := @this: org.testcases.ifs.FermatsLastTheorem,
	i9 := @parameter0: int,
	i0 := @parameter1: int,
	i1 := @parameter2: int,
	if i9 <= 0 goto return 0,
	if i0 <= 0 goto return 0,
	if i1 <= 0 goto return 0,
	if i9 >= 1291 goto return 0
assertions: (Le (int addr: (BVInt32 p_this)) (int addr: Int32 0)),
	(or (is addr: (BVInt32 p_this) org.testcases.ifs.FermatsLastTheorem), (eq addr: (BVInt32 p_this) addr: Int32 0)),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4461)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: (BVInt32 p_this)) false),
	(not (Eq (int addr: (BVInt32 p_this)) (int addr: Int32 0))),
	(Gt (int (BVInt32 p1)) (int Int32 0)),
	(Gt (int (BVInt32 p2)) (int Int32 0)),
	(Ge (int (BVInt32 p0)) (int Int32 1291)),
	(mkTermArray (array arraysLength : Int32 -> Int32)),
	(mkTermArray (array addrToNumDimensions : Int32 -> Int32)),
	(mkTermArray (array addrToTypeId : Int32 -> Int32))
assumption:
lastStatus: SAT

----------------------------------------------------------------------------------------------------
path: r0 := @this: org.testcases.ifs.FermatsLastTheorem,
	i9 := @parameter0: int,
	i0 := @parameter1: int,
	i1 := @parameter2: int,
	if i9 <= 0 goto return 0,
	if i0 <= 0 goto return 0,
	if i1 <= 0 goto return 0
assertions: (Le (int addr: (BVInt32 p_this)) (int addr: Int32 0)),
	(or (is addr: (BVInt32 p_this) org.testcases.ifs.FermatsLastTheorem), (eq addr: (BVInt32 p_this) addr: Int32 0)),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4461)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: (BVInt32 p_this)) false),
	(not (Eq (int addr: (BVInt32 p_this)) (int addr: Int32 0))),
	(Gt (int (BVInt32 p0)) (int Int32 0)),
	(Gt (int (BVInt32 p1)) (int Int32 0)),
	(Le (int (BVInt32 p2)) (int Int32 0)),
	(mkTermArray (array arraysLength : Int32 -> Int32)),
	(mkTermArray (array addrToNumDimensions : Int32 -> Int32)),
	(mkTermArray (array addrToTypeId : Int32 -> Int32))
assumption:
lastStatus: SAT

----------------------------------------------------------------------------------------------------
path: r0 := @this: org.testcases.ifs.FermatsLastTheorem,
	i9 := @parameter0: int,
	i0 := @parameter1: int,
	i1 := @parameter2: int,
	if i9 <= 0 goto return 0,
	if i0 <= 0 goto return 0,
	if i1 <= 0 goto return 0,
	if i9 >= 1291 goto return 0,
	if i0 >= 1291 goto return 0,
	if i1 >= 1291 goto return 0
assertions: (Le (int addr: (BVInt32 p_this)) (int addr: Int32 0)),
	(or (is addr: (BVInt32 p_this) org.testcases.ifs.FermatsLastTheorem), (eq addr: (BVInt32 p_this) addr: Int32 0)),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4461)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: (BVInt32 p_this)) false),
	(not (Eq (int addr: (BVInt32 p_this)) (int addr: Int32 0))),
	(Gt (int (BVInt32 p0)) (int Int32 0)),
	(Gt (int (BVInt32 p1)) (int Int32 0)),
	(Lt (int (BVInt32 p0)) (int Int32 1291)),
	(Lt (int (BVInt32 p1)) (int Int32 1291)),
	(Ge (int (BVInt32 p2)) (int Int32 1291)),
	(mkTermArray (array arraysLength : Int32 -> Int32)),
	(mkTermArray (array addrToNumDimensions : Int32 -> Int32)),
	(mkTermArray (array addrToTypeId : Int32 -> Int32))
assumption:
lastStatus: SAT

----------------------------------------------------------------------------------------------------
path: r0 := @this: org.testcases.ifs.FermatsLastTheorem,
	i9 := @parameter0: int,
	i0 := @parameter1: int,
	i1 := @parameter2: int,
	if i9 <= 0 goto return 0,
	if i0 <= 0 goto return 0,
	if i1 <= 0 goto return 0,
	if i9 >= 1291 goto return 0,
	if i0 >= 1291 goto return 0,
	if i1 >= 1291 goto return 0,
	$i2 = i9 * i9,
	$i5 = $i2 * i9,
	$i3 = i0 * i0,
	$i4 = $i3 * i0,
	$i8 = $i5 + $i4,
	$i6 = i1 * i1,
	$i7 = $i6 * i1,
	if $i8 != $i7 goto return 0
assertions: (Le (int addr: (BVInt32 p_this)) (int addr: Int32 0)),
	(or (is addr: (BVInt32 p_this) org.testcases.ifs.FermatsLastTheorem), (eq addr: (BVInt32 p_this) addr: Int32 0)),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4461)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: (BVInt32 p_this)) false),
	(not (Eq (int addr: (BVInt32 p_this)) (int addr: Int32 0))),
	(Gt (int (BVInt32 p0)) (int Int32 0)),
	(Gt (int (BVInt32 p1)) (int Int32 0)),
	(Gt (int (BVInt32 p2)) (int Int32 0)),
	(Lt (int (BVInt32 p0)) (int Int32 1291)),
	(Lt (int (BVInt32 p1)) (int Int32 1291)),
	(Lt (int (BVInt32 p2)) (int Int32 1291)),
	(not (Eq (int (Add (int (Mul (int (Mul (int (BVInt32 p0)) (int (BVInt32 p0)))) (int (BVInt32 p0)))) (int (Mul (int (Mul (int (BVInt32 p1)) (int (BVInt32 p1)))) (int (BVInt32 p1)))))) (int (Mul (int (Mul (int (BVInt32 p2)) (int (BVInt32 p2)))) (int (BVInt32 p2)))))),
	(mkTermArray (array arraysLength : Int32 -> Int32)),
	(mkTermArray (array addrToNumDimensions : Int32 -> Int32)),
	(mkTermArray (array addrToTypeId : Int32 -> Int32))
assumption:
lastStatus: SAT
