package org.testcases.cycle;

// Результат: 2 теста: один не заходит в while (единственное состояние здесь), другой с assertTimeoutPreemptively прямо на while с равными значениями. Само выполнение завершается, не падает по таймауту.

public class InfWhile {
    public boolean fun(int x, int y) {
        while (x == y) {
            x++;
            y++;
        }
        return false;
    }
}

----------------------------------------------------------------------------------------------------
path: r0 := @this: org.testcases.cycle.InfWhile,
	i0 := @parameter0: int,
	i1 := @parameter1: int,
	if i0 != i1 goto return 0
assertions: (Le (int addr: (BVInt32 p_this)) (int addr: Int32 0)),
	(or (is addr: (BVInt32 p_this) org.testcases.cycle.InfWhile), (eq addr: (BVInt32 p_this) addr: Int32 0)),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4479)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: (BVInt32 p_this)) false),
	(not (Eq (int addr: (BVInt32 p_this)) (int addr: Int32 0))),
	(not (Eq (int (BVInt32 p0)) (int (BVInt32 p1)))),
	(mkTermArray (array arraysLength : Int32 -> Int32)),
	(mkTermArray (array addrToNumDimensions : Int32 -> Int32)),
	(mkTermArray (array addrToTypeId : Int32 -> Int32))
assumption:
lastStatus: SAT
