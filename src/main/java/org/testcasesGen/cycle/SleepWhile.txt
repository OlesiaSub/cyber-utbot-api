package org.testcases.cycle;

// генерится только 1 тест с таймаутом. Хотя есть два состояния с ограничениями на оба возможных случая.

public class SleepWhile {
    public boolean fun(int x) throws InterruptedException {
        while (true) {
            Thread.sleep(1000);
            if (x == 5) {
                return true;
            }
            break;
        }
        return false;
    }
}

----------------------------------------------------------------------------------------------------
path: r0 := @this: org.testcases.cycle.SleepWhile,
	i0 := @parameter0: int,
	staticinvoke <java.lang.Thread: void sleep(long)>(1000L),
	if i0 != 5 goto return 0
assertions: (Le (int addr: (BVInt32 p_this)) (int addr: Int32 0)),
	(or (is addr: (BVInt32 p_this) org.testcases.cycle.SleepWhile), (eq addr: (BVInt32 p_this) addr: Int32 0)),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4481)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: (BVInt32 p_this)) false),
	(not (Eq (int addr: (BVInt32 p_this)) (int addr: Int32 0))),
	(is addr: Int32 1 java.lang.Thread. Possible types number: 6),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 1)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 1)) (int Int32 4481)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 1)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 1)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 1) false),
	(Eq (int (BVInt32 p0)) (int Int32 5)),
	(mkTermArray (array arraysLength : Int32 -> Int32)),
	(mkTermArray (array addrToNumDimensions : Int32 -> Int32)),
	(mkTermArray (array addrToTypeId : Int32 -> Int32))
assumption:
lastStatus: SAT

----------------------------------------------------------------------------------------------------
path: r0 := @this: org.testcases.cycle.SleepWhile,
	i0 := @parameter0: int,
	staticinvoke <java.lang.Thread: void sleep(long)>(1000L),
	if i0 != 5 goto return 0
assertions: (Le (int addr: (BVInt32 p_this)) (int addr: Int32 0)),
	(or (is addr: (BVInt32 p_this) org.testcases.cycle.SleepWhile), (eq addr: (BVInt32 p_this) addr: Int32 0)),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4481)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: (BVInt32 p_this)) false),
	(not (Eq (int addr: (BVInt32 p_this)) (int addr: Int32 0))),
	(is addr: Int32 1 java.lang.Thread. Possible types number: 6),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 1)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 1)) (int Int32 4481)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 1)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 1)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 1) false),
	(not (Eq (int (BVInt32 p0)) (int Int32 5))),
	(mkTermArray (array arraysLength : Int32 -> Int32)),
	(mkTermArray (array addrToNumDimensions : Int32 -> Int32)),
	(mkTermArray (array addrToTypeId : Int32 -> Int32))
assumption:
lastStatus: SAT

