package org.testcases.math;

// формула значительно больше, чем у Pow (да и первое решение сильно позже приходит). Результат тот же

public class PowOverlap {
    public boolean fun(int x) {
        if (x > Math.pow(2, 3) && x < Math.pow(2, 2)) {
            return true;
        }
        x++;
        return false;
    }
}

----------------------------------------------------------------------------------------------------
path: r0 := @this: org.testcases.math.PowOverlap,
	i2 := @parameter0: int,
	$d0 = (double) i2,
	$d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, 3.0),
	d0 := @parameter0: double,
	d1 := @parameter1: double,
	$d2 = staticinvoke <java.lang.StrictMath: double pow(double,double)>(d0, d1),
	d0 := @parameter0: double,
	d1 := @parameter1: double,
	$d2 = staticinvoke <java.lang.FdLibm$Pow: double compute(double,double)>(d0, d1),
	d1 := @parameter0: double,
	d0 := @parameter1: double,
	$b0 = d0 cmpl 0.0,
	if $b0 != 0 goto $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1),
	$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1),
	d0 := @parameter0: double,
	$b0 = d0 cmpl d0,
	if $b0 == 0 goto $z0 = 0,
	$z0 = 0,
	return $z0,
	$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1),
	if $z0 != 0 goto $d2 = d1 + d0,
	$z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0),
	d0 := @parameter0: double,
	$b0 = d0 cmpl d0,
	if $b0 == 0 goto $z0 = 0,
	$z0 = 0,
	return $z0,
	$z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0),
	if $z1 == 0 goto $d3 = staticinvoke <java.lang.Math: double abs(double)>(d0),
	$d3 = staticinvoke <java.lang.Math: double abs(double)>(d0),
	d0 := @parameter0: double,
	$b0 = d0 cmpg 0.0,
	if $b0 > 0 goto $d1 = d0,
	$d1 = d0,
	return $d1,
	$d3 = staticinvoke <java.lang.Math: double abs(double)>(d0),
	$d4 = staticinvoke <java.lang.Math: double abs(double)>(d1),
	d0 := @parameter0: double,
	$b0 = d0 cmpg 0.0,
	if $b0 > 0 goto $d1 = d0,
	$d1 = d0,
	return $d1,
	$d4 = staticinvoke <java.lang.Math: double abs(double)>(d1),
	d33 = $d4,
	$b1 = d0 cmpl 2.0,
	if $b1 != 0 goto $b2 = d0 cmpl 0.5,
	$b2 = d0 cmpl 0.5,
	if $b2 != 0 goto $b3 = $d3 cmpl 1.0,
	$b3 = $d3 cmpl 1.0,
	if $b3 != 0 goto $b4 = $d3 cmpl #Infinity,
	$b4 = $d3 cmpl #Infinity,
	if $b4 != 0 goto $i5 = staticinvoke <java.lang.FdLibm: int __HI(double)>(d1),
	$i5 = staticinvoke <java.lang.FdLibm: int __HI(double)>(d1),
	d0 := @parameter0: double,
	$l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0),
	$l1 = $l0 >> 32,
	$i2 = (int) $l1,
	return $i2,
	$i5 = staticinvoke <java.lang.FdLibm: int __HI(double)>(d1),
	$i54 = $i5 & 2147483647,
	i55 = $i54,
	i56 = 0,
	if $i5 >= 0 goto $b58 = $d4 cmpl 0.0,
	$b43 = $d3 cmpl 9.007199254740992E15,
	if $b43 < 0 goto $b44 = $d3 cmpl 1.0,
	$b44 = $d3 cmpl 1.0,
	if $b44 < 0 goto $b58 = $d4 cmpl 0.0,
	l57 = (long) $d3,
	$d28 = (double) l57,
	$b45 = $d28 cmpl $d3,
	if $b45 != 0 goto $b58 = $d4 cmpl 0.0,
	$l46 = l57 & 1L,
	$i47 = (int) $l46,
	i56 = 2 - $i47,
	$b58 = $d4 cmpl 0.0,
	if $b58 == 0 goto d37 = $d4,
	$b8 = $d4 cmpl #Infinity,
	if $b8 == 0 goto d37 = $d4,
	$b9 = $d4 cmpl 1.0,
	if $b9 != 0 goto $i10 = $i5 >> 31,
	$i10 = $i5 >> 31,
	i60 = $i10 + 1,
	$i11 = i60 | i56,
	if $i11 != 0 goto d38 = 1.0,
	d38 = 1.0,
	d159 = 1.0,
	d158 = 1.0,
	d157 = 1.0,
	d156 = 1.0,
	d155 = 1.0,
	d154 = 1.0,
	d153 = 1.0,
	d152 = 1.0,
	d151 = 1.0,
	$i12 = i56 - 1,
	$i13 = i60 | $i12,
	if $i13 != 0 goto $b14 = $d3 cmpl 2.1474856959999995E9,
	d38 = -1.0,
	d159 = -1.0,
	d158 = -1.0,
	d157 = -1.0,
	d156 = -1.0,
	d155 = -1.0,
	d154 = -1.0,
	d153 = -1.0,
	d152 = -1.0,
	d151 = -1.0,
	$b14 = $d3 cmpl 2.1474856959999995E9,
	if $b14 <= 0 goto b61 = 0,
	b61 = 0,
	if $i54 >= 1048576 goto $i15 = i55 >> 20,
	d33 = $d4 * 9.007199254740992E15,
	b61 = -53,
	i55 = staticinvoke <java.lang.FdLibm: int __HI(double)>(d33),
	d0 := @parameter0: double,
	$l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0),
	$l1 = $l0 >> 32,
	$i2 = (int) $l1,
	return $i2,
	i55 = staticinvoke <java.lang.FdLibm: int __HI(double)>(d33),
	$i15 = i55 >> 20,
	$i16 = $i15 - 1023,
	$i36 = b61 + $i16,
	i62 = $i36,
	$i37 = i55 & 1048575,
	$i38 = $i37 | 1072693248,
	i63 = $i38,
	if $i37 > 235662 goto (branch),
	z2 = 0,
	b87 = 0,
	b86 = 0,
	z3 = 0,
	b85 = 0,
	b84 = 0,
	b83 = 0,
	b82 = 0,
	goto [?= $d48 = staticinvoke <java.lang.FdLibm: double __HI(double,int)>(d33, i63)],
	$d48 = staticinvoke <java.lang.FdLibm: double __HI(double,int)>(d33, i63),
	d0 := @parameter0: double,
	i1 := @parameter1: int,
	$l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0),
	$l4 = $l0 & 4294967295L,
	$l2 = (long) i1,
	$l3 = $l2 << 32,
	$l5 = $l4 | $l3,
	$d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l5),
	return $d1,
	$d48 = staticinvoke <java.lang.FdLibm: double __HI(double,int)>(d33, i63),
	$r0 = newarray (double)[2],
	$r0[0] = 1.0,
	$r0[1] = 1.5,
	$r1 = newarray (double)[2],
	$r1[0] = 0.0,
	$r1[1] = 0.5849624872207642,
	$r2 = newarray (double)[2],
	$r2[0] = 0.0,
	$r2[1] = 1.350039202129749E-8,
	$d49 = $r0[b83],
	$d50 = $d48 - $d49,
	$d51 = $r0[b84],
	$d52 = $d48 + $d51,
	$d53 = 1.0 / $d52,
	$d54 = $d50 * $d53,
	$d55 = staticinvoke <java.lang.FdLibm: double __LO(double,int)>($d54, 0),
	d0 := @parameter0: double,
	i1 := @parameter1: int,
	$l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0),
	$l4 = $l0 & -4294967296L,
	$l2 = (long) i1,
	$l3 = $l2 & 4294967295L,
	$l5 = $l4 | $l3,
	$d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l5),
	return $d1,
	$d55 = staticinvoke <java.lang.FdLibm: double __LO(double,int)>($d54, 0),
	$i64 = i63 >> 1,
	$i65 = $i64 | 536870912,
	$i66 = $i65 + 524288,
	$i67 = z3 << 18,
	$i68 = $i66 + $i67,
	$d56 = staticinvoke <java.lang.FdLibm: double __HI(double,int)>(0.0, $i68),
	d0 := @parameter0: double,
	i1 := @parameter1: int,
	$l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0),
	$l4 = $l0 & 4294967295L,
	$l2 = (long) i1,
	$l3 = $l2 << 32,
	$l5 = $l4 | $l3,
	$d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l5),
	return $d1,
	$d56 = staticinvoke <java.lang.FdLibm: double __HI(double,int)>(0.0, $i68),
	$d57 = $r0[b85],
	$d58 = $d56 - $d57,
	$d59 = $d48 - $d58,
	$d60 = $d55 * $d56,
	$d61 = $d50 - $d60,
	$d62 = $d55 * $d59,
	$d63 = $d61 - $d62,
	$d64 = $d53 * $d63,
	$d65 = $d54 * $d54,
	$d66 = $d65 * $d65,
	$d67 = $d65 * 0.20697501780033842,
	$d68 = 0.23066074577556175 + $d67,
	$d69 = $d65 * $d68,
	$d70 = 0.272728123808534 + $d69,
	$d71 = $d65 * $d70,
	$d72 = 0.33333332981837743 + $d71,
	$d73 = $d65 * $d72,
	$d74 = 0.4285714285785502 + $d73,
	$d75 = $d65 * $d74,
	$d76 = 0.5999999999999946 + $d75,
	$d77 = $d66 * $d76,
	$d78 = $d55 + $d54,
	$d79 = $d64 * $d78,
	$d80 = $d77 + $d79,
	$d81 = $d55 * $d55,
	$d82 = 3.0 + $d81,
	$d83 = $d82 + $d80,
	$d84 = staticinvoke <java.lang.FdLibm: double __LO(double,int)>($d83, 0),
	d0 := @parameter0: double,
	i1 := @parameter1: int,
	$l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0),
	$l4 = $l0 & -4294967296L,
	$l2 = (long) i1,
	$l3 = $l2 & 4294967295L,
	$l5 = $l4 | $l3,
	$d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l5),
	return $d1,
	$d84 = staticinvoke <java.lang.FdLibm: double __LO(double,int)>($d83, 0),
	$d85 = $d84 - 3.0,
	$d86 = $d85 - $d81,
	$d87 = $d80 - $d86,
	$d88 = $d55 * $d84,
	$d89 = $d64 * $d84,
	$d90 = $d87 * $d54,
	$d91 = $d89 + $d90,
	$d92 = $d88 + $d91,
	$d93 = staticinvoke <java.lang.FdLibm: double __LO(double,int)>($d92, 0),
	d0 := @parameter0: double,
	i1 := @parameter1: int,
	$l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0),
	$l4 = $l0 & -4294967296L,
	$l2 = (long) i1,
	$l3 = $l2 & 4294967295L,
	$l5 = $l4 | $l3,
	$d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l5),
	return $d1,
	$d93 = staticinvoke <java.lang.FdLibm: double __LO(double,int)>($d92, 0),
	$d94 = $d93 - $d88,
	$d95 = $d91 - $d94,
	$d96 = 0.9617967009544373 * $d93,
	$d97 = -7.028461650952758E-9 * $d93,
	$d98 = $d95 * 0.9617966939259756,
	$d99 = $d97 + $d98,
	$d100 = $r2[b86],
	$d101 = $d99 + $d100,
	$d102 = (double) i62,
	$d103 = $d96 + $d101,
	$d104 = $r1[b82],
	$d105 = $d103 + $d104,
	$d106 = $d105 + $d102,
	$d107 = staticinvoke <java.lang.FdLibm: double __LO(double,int)>($d106, 0),
	d0 := @parameter0: double,
	i1 := @parameter1: int,
	$l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0),
	$l4 = $l0 & -4294967296L,
	$l2 = (long) i1,
	$l3 = $l2 & 4294967295L,
	$l5 = $l4 | $l3,
	$d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l5),
	return $d1,
	$d107 = staticinvoke <java.lang.FdLibm: double __LO(double,int)>($d106, 0),
	d46 = $d107,
	$d108 = $d107 - $d102,
	$d109 = $r1[b87],
	$d110 = $d108 - $d109,
	$d111 = $d110 - $d96,
	d47 = $d101 - $d111,
	$d112 = staticinvoke <java.lang.FdLibm: double __LO(double,int)>(d0, 0),
	d0 := @parameter0: double,
	i1 := @parameter1: int,
	$l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0),
	$l4 = $l0 & -4294967296L,
	$l2 = (long) i1,
	$l3 = $l2 & 4294967295L,
	$l5 = $l4 | $l3,
	$d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l5),
	return $d1,
	$d112 = staticinvoke <java.lang.FdLibm: double __LO(double,int)>(d0, 0),
	$d113 = d0 - $d112,
	$d114 = $d113 * d46,
	$d115 = d0 * d47,
	$d116 = $d114 + $d115,
	$d117 = $d112 * d46,
	d118 = $d117,
	$d119 = $d116 + $d117,
	$i69 = staticinvoke <java.lang.FdLibm: int __HI(double)>($d119),
	d0 := @parameter0: double,
	$l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0),
	$l1 = $l0 >> 32,
	$i2 = (int) $l1,
	return $i2,
	$i69 = staticinvoke <java.lang.FdLibm: int __HI(double)>($d119),
	$i70 = staticinvoke <java.lang.FdLibm: int __LO(double)>($d119),
	d0 := @parameter0: double,
	$l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0),
	$i1 = (int) $l0,
	return $i1,
	$i70 = staticinvoke <java.lang.FdLibm: int __LO(double)>($d119),
	if $i69 < 1083179008 goto $i17 = $i69 & 2147483647,
	$i17 = $i69 & 2147483647,
	if $i17 < 1083231232 goto $i71 = $i69 & 2147483647,
	$i30 = $i69 - -1064252416,
	$i31 = $i30 | $i70,
	if $i31 == 0 goto $d9 = $d119 - $d117,
	$d11 = d154 * 0.0,
	return $d11,
	$d2 = staticinvoke <java.lang.FdLibm$Pow: double compute(double,double)>(d0, d1),
	return $d2,
	$d2 = staticinvoke <java.lang.StrictMath: double pow(double,double)>(d0, d1),
	return $d2,
	$d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, 3.0),
	$b0 = $d0 cmpl $d1,
	if $b0 <= 0 goto return 0
assertions: (Le (int addr: (BVInt32 p_this)) (int addr: Int32 0)),
	(or (is addr: (BVInt32 p_this) org.testcases.math.PowOverlap), (eq addr: (BVInt32 p_this) addr: Int32 0)),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: (BVInt32 p_this))) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: (BVInt32 p_this)) false),
	(not (Eq (int addr: (BVInt32 p_this)) (int addr: Int32 0))),
	(is addr: Int32 1 java.lang.Math),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 1)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 1)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 1)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 1)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 1) false),
	(is addr: Int32 2 java.lang.StrictMath),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 2)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 2)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 2)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 2)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 2) false),
	(is addr: Int32 3 java.lang.FdLibm$Pow),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 3)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 3)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 3)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 3)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 3) false),
	(not (Eq (int (Cmpl (double Fp64 3.0) (double Fp64 0.0))) (int Int32 0))),
	(is addr: Int32 4 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 4)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 4)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 4)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 4)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 4) false),
	(Eq (int (Cmpl (double Fp64 2.0) (double Fp64 2.0))) (int Int32 0)),
	(mkTermArray (array arraysLength : Int32 -> Int32)),
	(mkTermArray (array addrToNumDimensions : Int32 -> Int32)),
	(mkTermArray (array addrToTypeId : Int32 -> Int32)),
	(is addr: Int32 5 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 5)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 5)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 5)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 5)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 5) false),
	(Eq (int (Cmpl (double Fp64 3.0) (double Fp64 3.0))) (int Int32 0)),
	(is addr: Int32 6 java.lang.Math),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 6)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 6)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 6)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 6)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 6) false),
	(Gt (int (Cmpg (double Fp64 3.0) (double Fp64 0.0))) (int Int32 0)),
	(is addr: Int32 7 java.lang.Math),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 7)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 7)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 7)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 7)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 7) false),
	(Gt (int (Cmpg (double Fp64 2.0) (double Fp64 0.0))) (int Int32 0)),
	(not (Eq (int (Cmpl (double Fp64 3.0) (double Fp64 2.0))) (int Int32 0))),
	(not (Eq (int (Cmpl (double Fp64 3.0) (double Fp64 0.5))) (int Int32 0))),
	(not (Eq (int (Cmpl (double Fp64 3.0) (double Fp64 1.0))) (int Int32 0))),
	(not (Eq (int (Cmpl (double Fp64 3.0) (double Fp64 Infinity))) (int Int32 0))),
	(is addr: Int32 8 java.lang.FdLibm),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 8)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 8)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 8)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 8)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 8) false),
	(is addr: Int32 9 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 9)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 9)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 9)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 9)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 9) false),
	(Lt (int UtCastExpression(variable=(long (Shr (long (BVLong64 nativeConst0)) (int Int32 32))), type=int)) (int Int32 0)),
	(Lt (int (Cmpl (double Fp64 3.0) (double Fp64 9.007199254740992E15))) (int Int32 0)),
	(Ge (int (Cmpl (double Fp64 3.0) (double Fp64 1.0))) (int Int32 0)),
	(not (Eq (int (Cmpl (double Fp64 2.0) (double Fp64 0.0))) (int Int32 0))),
	(not (Eq (int (Cmpl (double Fp64 2.0) (double Fp64 Infinity))) (int Int32 0))),
	(not (Eq (int (Cmpl (double Fp64 2.0) (double Fp64 1.0))) (int Int32 0))),
	(Eq (int (Shr (int UtCastExpression(variable=(long (Shr (long (BVLong64 nativeConst0)) (int Int32 32))), type=int)) (int Int32 31))) (int Int32 -1)),
	(Le (int (Cmpl (double Fp64 3.0) (double Fp64 2.1474856959999995E9))) (int Int32 0)),
	(Lt (int (And (int UtCastExpression(variable=(long (Shr (long (BVLong64 nativeConst0)) (int Int32 32))), type=int)) (int Int32 2147483647))) (int Int32 1048576)),
	(is addr: Int32 21 java.lang.FdLibm),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 21)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 21)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 21)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 21)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 21) false),
	(is addr: Int32 50 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 50)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 50)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 50)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 50)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 50) false),
	(Le (int (And (int UtCastExpression(variable=(long (Shr (long (BVLong64 nativeConst8)) (int Int32 32))), type=int)) (int Int32 1048575))) (int Int32 235662)),
	(is addr: Int32 269 java.lang.FdLibm),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 269)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 269)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 269)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 269)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 269) false),
	(is addr: Int32 271 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 271)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 271)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 271)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 271)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 271) false),
	(is addr: Int32 277 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 277)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 277)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 277)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 277)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 277) false),
	(Eq (int (select (array arraysLength : Int32 -> Int32) addr: Int32 284)) (int Int32 2)),
	(Ge (int (select (array arraysLength : Int32 -> Int32) addr: Int32 284)) (int Int32 0)),
	(Le (int (select (array arraysLength : Int32 -> Int32) addr: Int32 284)) (int Int32 40)),
	(is addr: Int32 284 double[]),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 284)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 284)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 284)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 284)) (int Int32 4)),
	(Eq (int (select (array arraysLength : Int32 -> Int32) addr: Int32 290)) (int Int32 2)),
	(Ge (int (select (array arraysLength : Int32 -> Int32) addr: Int32 290)) (int Int32 0)),
	(Le (int (select (array arraysLength : Int32 -> Int32) addr: Int32 290)) (int Int32 40)),
	(is addr: Int32 290 double[]),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 290)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 290)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 290)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 290)) (int Int32 4)),
	(Eq (int (select (array arraysLength : Int32 -> Int32) addr: Int32 300)) (int Int32 2)),
	(Ge (int (select (array arraysLength : Int32 -> Int32) addr: Int32 300)) (int Int32 0)),
	(Le (int (select (array arraysLength : Int32 -> Int32) addr: Int32 300)) (int Int32 40)),
	(is addr: Int32 300 double[]),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 300)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 300)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 300)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 300)) (int Int32 4)),
	(is addr: Int32 319 java.lang.FdLibm),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 319)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 319)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 319)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 319)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 319) false),
	(is addr: Int32 323 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 323)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 323)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 323)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 323)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 323) false),
	(is addr: Int32 332 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 332)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 332)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 332)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 332)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 332) false),
	(mkTermArray (array double_Arrays : Int32 -> Int32 -> Fp64)),
	(is addr: Int32 375 java.lang.FdLibm),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 375)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 375)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 375)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 375)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 375) false),
	(is addr: Int32 392 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 392)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 392)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 392)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 392)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 392) false),
	(is addr: Int32 409 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 409)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 409)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 409)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 409)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 409) false),
	(is addr: Int32 425 java.lang.FdLibm),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 425)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 425)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 425)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 425)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 425) false),
	(is addr: Int32 439 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 439)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 439)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 439)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 439)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 439) false),
	(is addr: Int32 452 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 452)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 452)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 452)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 452)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 452) false),
	(is addr: Int32 463 java.lang.FdLibm),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 463)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 463)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 463)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 463)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 463) false),
	(is addr: Int32 476 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 476)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 476)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 476)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 476)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 476) false),
	(is addr: Int32 495 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 495)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 495)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 495)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 495)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 495) false),
	(is addr: Int32 522 java.lang.FdLibm),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 522)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 522)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 522)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 522)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 522) false),
	(is addr: Int32 523 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 523)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 523)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 523)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 523)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 523) false),
	(is addr: Int32 531 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 531)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 531)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 531)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 531)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 531) false),
	(is addr: Int32 554 java.lang.FdLibm),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 554)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 554)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 554)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 554)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 554) false),
	(is addr: Int32 561 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 561)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 561)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 561)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 561)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 561) false),
	(is addr: Int32 574 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 574)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 574)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 574)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 574)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 574) false),
	(is addr: Int32 591 java.lang.FdLibm),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 591)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 591)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 591)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 591)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 591) false),
	(is addr: Int32 596 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 596)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 596)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 596)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 596)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 596) false),
	(is addr: Int32 601 java.lang.FdLibm),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 601)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 601)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 601)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 601)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 601) false),
	(is addr: Int32 602 java.lang.Double),
	(Ge (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 602)) (int Int32 0)),
	(Le (int (select (array addrToTypeId : Int32 -> Int32) addr: Int32 602)) (int Int32 4463)),
	(Ge (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 602)) (int Int32 0)),
	(Le (int (select (array addrToNumDimensions : Int32 -> Int32) addr: Int32 602)) (int Int32 4)),
	(eq (select (array isMock : Int32 -> Bool) addr: Int32 602) false),
	(Lt (int UtCastExpression(variable=(long (Shr (long (BVLong64 nativeConst149)) (int Int32 32))), type=int)) (int Int32 1083179008)),
	(Ge (int (And (int UtCastExpression(variable=(long (Shr (long (BVLong64 nativeConst149)) (int Int32 32))), type=int)) (int Int32 2147483647))) (int Int32 1083231232)),
	(not (Eq (int (Or (int (Add (int UtCastExpression(variable=(long (Shr (long (BVLong64 nativeConst149)) (int Int32 32))), type=int)) (int Int32 1064252416))) (int UtCastExpression(variable=(long (BVLong64 nativeConst154)), type=int)))) (int Int32 0))),
	(Le (int (Cmpl (double UtCastExpression(variable=(int (BVInt32 p0)), type=double)) (double (Mul (double Fp64 -1.0) (double Fp64 0.0))))) (int Int32 0))
assumption:
lastStatus: SAT

java.util.concurrent.CancellationException: Timeout
