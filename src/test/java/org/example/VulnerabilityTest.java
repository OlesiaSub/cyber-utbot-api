package org.example;

import org.junit.jupiter.api.Test;
import java.lang.reflect.Method;
import java.lang.reflect.InvocationTargetException;
import java.io.IOException;

public final class VulnerabilityTest {
    ///region Test suites for executable org.example.Vulnerability.vulnerability
    
    ///region
    
    @Test
    public void testVulnerability1() throws ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InvocationTargetException  {
        Vulnerability vulnerability = new Vulnerability();
        
        Class vulnerabilityClazz = Class.forName("org.example.Vulnerability");
        Class intType = int.class;
        Method vulnerabilityMethod = vulnerabilityClazz.getDeclaredMethod("vulnerability", intType, intType);
        vulnerabilityMethod.setAccessible(true);
        java.lang.Object[] vulnerabilityMethodArguments = new java.lang.Object[2];
        vulnerabilityMethodArguments[0] = -255;
        vulnerabilityMethodArguments[1] = -255;
        vulnerabilityMethod.invoke(vulnerability, vulnerabilityMethodArguments);
    }
    ///endregion
    
    ///endregion
    
    ///region Test suites for executable org.example.Vulnerability.fun
    
    ///region
    
    @Test
    public void testFun1() throws IOException  {
        Vulnerability vulnerability = new Vulnerability();
        
        vulnerability.fun(-255, -255);
    }
    
    @Test
    public void testFun2() throws IOException  {
        Vulnerability vulnerability = new Vulnerability();
        
        vulnerability.fun(1000, -255);
    }
    ///endregion
    
    ///endregion
}

